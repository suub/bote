suub.bote.dict> 


suub.bote.dict> 
suub.bote.dict> 
suub.bote.dict> f
#<core$future_call$reify__6320@1ae79d2f: :pending>
suub.bote.dict> f
f
#<core$future_call$reify__6320@1ae79d2f: :pending>
suub.bote.dict> 
#<core$future_call$reify__6320@1ae79d2f: :pending>
suub.bote.dict> f
#<core$future_call$reify__6320@1ae79d2f: :pending>
suub.bote.dict> (:statistic res)
{"/home/noelte/clojure/ocr-engine-results/abby-200-neu-unser-algorithmus-7.4.2015.-wieder-mit-m-zu-n" {"stichwortsuche" {:error-rate 1.128887679477534, :charc 499784, :error-number 5642, :by-category {[4 3] 3, [8 4] 365, [8 3] 180, [3 3] 3, [1 1] 2484, [3 4] 6, [4 2] 34, [4 7] 13, [4 1] 107, [4 6] 3, [1 4] 333, [8 2] 148, [1 3] 18, [4 8] 82, [1 5] 22, [1 8] 145, [1 7] 409, [8 1] 409, [8 5] 471, [3 6] 7, [4 5] 4, [3 1] 14, [3 8] 2, [1 6] 158, [4 4] 154, [1 2] 62, [3 5] 4, [3 2] 2}}, "case-sensitive-stichwortsuche" {:error-rate 1.13228914891233, :charc 499784, :error-number 5659, :by-category {[4 3] 3, [8 4] 365, [8 3] 180, [3 3] 3, [1 1] 2484, [3 4] 6, [4 2] 34, [1 9] 17, [4 7] 13, [4 1] 107, [4 6] 3, [1 4] 333, [8 2] 148, [1 3] 18, [4 8] 82, [1 5] 22, [1 8] 145, [1 7] 409, [8 1] 409, [8 5] 471, [3 6] 7, [4 5] 4, [3 1] 14, [3 8] 2, [1 6] 158, [4 4] 154, [1 2] 62, [3 5] 4, [3 2] 2}}, "phrasensuche" {:error-rate 1.161901941638788, :charc 499784, :error-number 5807, :by-category {[4 3] 3, [8 4] 365, [8 3] 180, [3 3] 3, [5 4] 29, [1 1] 2484, [3 4] 6, [4 2] 34, [4 7] 13, [4 1] 107, [5 2] 8, [4 6] 3, [1 4] 333, [8 2] 148, [1 3] 18, [4 8] 82, [1 5] 22, [1 8] 145, [1 7] 409, [8 1] 409, [5 1] 2, [5 6] 3, [5 8] 123, [8 5] 471, [3 6] 7, [4 5] 4, [3 1] 14, [3 8] 2, [1 6] 158, [4 4] 154, [1 2] 62, [3 5] 4, [3 2] 2}}, "alle Fehler" {:error-rate 1.190914475053223, :charc 499784, :error-number 5952, :by-category {[4 3] 3, [2 2] 28, [2 8] 16, [8 4] 365, [2 3] 51, [2 5] 5, [8 3] 180, [3 3] 3, [5 4] 29, [1 1] 2484, [3 4] 6, [4 2] 34, [1 9] 17, [4 7] 13, [4 1] 107, [5 2] 8, [4 6] 3, [1 4] 333, [8 2] 148, [1 3] 18, [4 8] 82, [1 5] 22, [1 8] 145, [1 7] 409, [8 1] 409, [5 1] 2, [5 6] 3, [5 8] 123, [8 5] 471, [2 4] 18, [3 6] 7, [4 5] 4, [3 1] 14, [2 1] 7, [3 8] 2, [1 6] 158, [4 4] 154, [2 6] 3, [1 2] 62, [3 5] 4, [3 2] 2}}}}
suub.bote.dict> (clojure.repl/doc spit)
-------------------------
clojure.core/spit
([f content & options])
  Opposite of slurp.  Opens f with writer, writes content, then
  closes f. Options passed to clojure.java.io/writer.
nil
suub.bote.dict> (spit "progress" 1 :append true)
nil
suub.bote.dict> (spit "progress" (str 2 "\n") :append true)
nil
suub.bote.dict> (slurp "progress")
"12\n"
suub.bote.dict> (def f (future (do 
                          (def res (binding [*out* (clojure.java.io/writer "status.txt")]
                  (evaluate-algorithm
                 (get-current-params)
                 "/home/noelte/clojure/ocr-engine-results/abby-neu-neue-seiten-ohne-schrottseiten"
                 "/home/noelte/clojure/ocr-engine-results/abby-neu-neu-seiten-ohne-schrottseiten-unser-algorithmus-7.4.2015"
                 152)))
                          (def res (binding [*out* (clojure.java.io/writer "status.txt")]
                  (evaluate-algorithm
                 (get-current-params)
                 "/home/noelte/clojure/ocr-engine-results/1870-abby"
                 "/home/noelte/clojure/ocr-engine-results/1870-abby-unser-algorithmus-7.4.2015"
                 10)))
                          (def res (binding [*out* (clojure.java.io/writer "status.txt")]
                  (evaluate-algorithm
                 (get-current-params)
                 "/home/noelte/clojure/ocr-engine-results/1900-abby"
                 "/home/noelte/clojure/ocr-engine-results/1900-abby-unser-algorithmus-7.4.2015"
                 8)))
                          (def res (binding [*out* (clojure.java.io/writer "status.txt")]
                  (evaluate-algorithm
                 (get-current-params)
                 "/home/noelte/clojure/ocr-engine-results/abby-more-text-ohne-schrottseiten"
                 "/home/noelte/clojure/ocr-engine-results/abby-more-text-ohne-schrottseiten-unser-algorithmus-7.4.2015"
                 352)))
                      (def res (generate-single-entity-statistics "/home/noelte/clojure/ocr-engine-results/abby-more-text-unser-algorithmus" (read-string (slurp "entities.edn"))))
                      (spit "line-statistics-ocr-verbessert.edn" (pr-str res)))))
                          
                          
#'suub.bote.dict/f
suub.bote.dict> f
#<core$future_call$reify__6320@1b8b36ed: :pending>
suub.bote.dict> f
#<core$future_call$reify__6320@1b8b36ed: :pending>
suub.bote.dict> f
#<core$future_call$reify__6320@1b8b36ed: :pending>
suub.bote.dict> f
#<core$future_call$reify__6320@1b8b36ed: :pending>
suub.bote.dict> f
#<core$future_call$reify__6320@1b8b36ed: nil>
suub.bote.dict> (def sorted-correction-quality (sorted-error-number-deltas "/home/noelte/clojure/ocr-engine-results/abby-more-text/" "/home/noelte/clojure/ocr-engine-results/abby-more-text-unser-algorithmus"))
#'suub.bote.dict/sorted-correction-quality
suub.bote.dict> (count sorted-correction-quality)
362
suub.bote.dict> (spit "sorted-correction-quality.edn" (pr-str sorted-correction-quality))
nil
suub.bote.dict> 






